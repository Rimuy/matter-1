"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"defaultSidebar":[{"type":"link","label":"Matter","href":"/matter/docs/intro","docId":"intro"},{"type":"link","label":"Installation","href":"/matter/docs/Installation","docId":"Installation"},{"type":"link","label":"Getting Started","href":"/matter/docs/GettingStarted","docId":"GettingStarted"},{"type":"category","label":"Best Practices","collapsible":true,"collapsed":false,"items":[{"type":"link","label":"Reconciliation","href":"/matter/docs/BestPractices/Reconciliation","docId":"BestPractices/Reconciliation"},{"type":"link","label":"Using CollectionService tags","href":"/matter/docs/BestPractices/CollectionService","docId":"BestPractices/CollectionService"}]},{"type":"link","label":"Why ECS","href":"/matter/docs/WhyECS","docId":"WhyECS"}]},"docs":{"BestPractices/CollectionService":{"id":"BestPractices/CollectionService","title":"Using CollectionService tags","description":"As a pure ECS first and foremost, Matter provides no special functionality for CollectionService tags out of the box. However, it\'s rather simple to implement this yourself. Here\'s an example taken from the official Matter example game.","sidebar":"defaultSidebar"},"BestPractices/Reconciliation":{"id":"BestPractices/Reconciliation","title":"Reconciliation","description":"The Data Model","sidebar":"defaultSidebar"},"GettingStarted":{"id":"GettingStarted","title":"Getting Started","description":"Here\'s how you scaffold a project with Matter.","sidebar":"defaultSidebar"},"Installation":{"id":"Installation","title":"Installation","description":"Wally package manager","sidebar":"defaultSidebar"},"intro":{"id":"intro","title":"Matter","description":"Matter is a modern ECS library for Roblox.","sidebar":"defaultSidebar"},"WhyECS":{"id":"WhyECS","title":"Why ECS","description":"- Behavior is declarative. Systems run every frame, and declare what the state of the world should be right now. This makes code self-healing and more resilient to game-breaking bugs than in an event-driven model where reacting to something happening only happens once.","sidebar":"defaultSidebar"}}}')}}]);